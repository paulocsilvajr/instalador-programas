#Limpar apt
package::apt-limpeza
install::apt autoremove -y;
install::apt autoclean -y;

#Atualizar programas
package::apt-atualiza
install::apt update && apt upgrade -y;

#Atualizar o sistema
package::apt-atualiza-sistema
install::apt update && apt dist-upgrade -y;

#Ubuntu restricted extras
package::apt::ubuntu-restricted-extras

#Calibre
package::apt::calibre

#Calibre KDE
package::calibre-kde
install::sudo -v && wget -nv -O- https://download.calibre-ebook.com/linux-installer.sh | sudo sh /dev/stdin

#Java 8(Oracle)
package::apt::oracle-java8-installer
ppa::ppa:webupd8team/java
install::apt install oracle-java8-set-default -y;
remove::apt remove oracle-java8-set-default -y;

#OpenJDK8(Java 8)
package::apt::openjdk-8-jdk

#OpenJDK11(Java 11)
package::apt::openjdk-11-jdk

#Python 2 e 3
package::python
install::apt install idle-python3.7 -y;
install::apt install tix -y;
install::apt install python-pip -y;
install::apt install python-dev -y;
install::apt install build-essential -y;
install::apt install python3-pip -y;
install::apt install python3-dev -y;
install::pip3 install --upgrade virtualenv;
install::pip2 install --upgrade pip;
install::pip3 install --upgrade pip;
install::apt install ipython3 -y;

#Ubuntu Make(UMAKE)
package::apt::ubuntu-make
ppa::ppa:ubuntu-desktop/ubuntu-make

#Pycharm CE(IDE Python - UMAKE)
package::pycharm-umake
dependency::ubuntu-make::openjdk-8-jdk::python
install::umake ide pycharm;
remove::umake ide pycharm -r;

#Eclipse(IDE Java)
package::apt::eclipse

#NetBeans(IDE Java - UMAKE)
package::netbeans-umake
dependency::ubuntu-make::openjdk-8-jdk
install::umake ide netbeans;
remove::umake ide netbeans -r;

#Intellij Idea CE(IDE Java - UMAKE)
package::idea-umake
dependency::ubuntu-make::openjdk-8-jdk
install::umake ide idea;
remove::umake ide idea -r;

#Atom
package::apt::atom
ppa::ppa:webupd8team/atom

#Dia
package::apt::dia

#Password gorilla
package::apt::password-gorilla

#Keepass2
package::apt::keepass2

#GIT
package::apt::git

#git-cola(GIT GUI)
package::apt::git-cola
dependency::git

#GnuCash
package::apt::gnucash

#tree
package::apt::tree

#emacs
package::apt:emacs

#inxi(informações do sistema)
package::apt::inxi

#python3-mysql.connector
package::python3-mysql.connector
dependency::python

#python3-psycopg2
package::python3-psycopg2
dependency::python

#Sublime-text-3
package::sublime-text
dependency::ubuntu-make
install::umake ide sublime-text;
remove::umake ide sublime-text -r;

#brackets
package::apt::brackets
ppa::ppa:webupd8team/brackets

#clipit
package::apt::clipit

#compizconfig
package::apt::compizconfig-settings-manager

#preload
package::apt::preload

#virtualbox
package::apt::virtualbox
install::apt install virtualbox-qt -y;

#geany
package::apt::geany

#gparted
package::apt::gparted

#gimp
package::apt::gimp

#vlc
package::apt::vlc

#blender
package::apt::blender

#synapse
package::apt::synapse

#Spotify
package::spotify-client
install::sudo apt-key adv --keyserver hkp://keyserver.ubuntu.com:80 --recv-keys 931FF8E79F0876134EDDBDCCA87FF9DF48BF1C90;
install::echo deb http://repository.spotify.com stable non-free | sudo tee /etc/apt/sources.list.d/spotify.list;
install::apt update;
install::apt install spotify-client -y;
remove::apt remove spotify-client -y;

#snap
package::apt::snapd
install::snap install core;

#Spotify(SNAP)
package::spotify-client-snap
dependency::snapd
install::snap install spotify;
remove::snap remove spotify;

#WPS-Office(SNAP)
package::wps-office-snap
dependency::snapd
install::snap install wps-office;
remove::snap remove wps-office;

#Pycharm CE(IDE Python - SNAP)
package::pycharm-snap
dependency::snapd::openjdk-11-jdk::python
install::snap install pycharm-community --classic;
remove::snap remove pycharm-community;

#Intellij Idea CE(IDE Java - SNAP)
package::idea-snap
dependency::snapd::openjdk-11-jdk
install::snap install intellij-idea-community --classic;
remove::snap remove intellij-idea-community;

#screenfetch(informações do sistema)
package::apt::screenfetch

#plasma-nm(kde5-nm-connection-editor)
package::apt::plasma-nm

#redshift
package::apt::redshift
install::apt install redshift-gtk -y;

#speedtest(teste de velocidade internet pelo terminal)
package::speedtest-cli
dependency::python
install::pip2 install speedtest-cli;
remove::pip2 uninstall speedtest-cli;

#htop(visualizador de processos)
package::apt::htop

#glances(monitor do sistema)
package::apt::glances

#guake(terminal)
package::apt::guake
install::apt install guake-indicator -y;
remove::apt remove guake-indicator -y;

#vim
package::apt::vim

#timeshift(restauração do sistema)
package::apt::timeshift

#curl
package::apt::curl

#ZSH & oh-my-zsh(ZShell)
package::apt::zsh
dependency::git::curl
install::sh -c "$(curl -fsSL https://raw.githubusercontent.com/robbyrussell/oh-my-zsh/master/tools/install.sh)";
install::chown -R $(users|awk ' {print $1} ') $(ls -d $HOME/.* | grep 'zsh');
install::apt install grc -y;
remove::apt remove grc -y;

#ZSH como shell padrão
package::zsh-padrao
install::chsh -s /bin/zsh $(users|awk ' {print $1} ')

#docker ce(docker/docker-compose)
package::docker-ce
dependency::curl
install::curl -fsSL get.docker.com -o get-docker.sh && sh get-docker.sh
install::usermod -aG docker $(users|awk ' {print $1} ')
install::curl -L "https://github.com/docker/compose/releases/download/1.25.5/docker-compose-$(uname -s)-$(uname -m)" -o /usr/local/bin/docker-compose
install::chmod +x /usr/local/bin/docker-compose
install::rm -v get-docker.sh
install::echo 'Faça logout para atualizar os grupos do usuário atual'

#retroarch
package::apt::retroarch
ppa::ppa:libretro/stable

#latex & texstudio
package::apt::texlive texlive-latex-extra texlive-lang-portuguese texstudio

#ssh-server
package::apt::openssh-server
install::service ssh start;
remove::service ssh stop;

#oneko(mascote)
package::apt::oneko

#figlet(texto em caracteres ASCII)
package::apt::figlet

#sl(Steam Locomotive)
package::apt::sl

#lynx(navegador em modo texto)
package::apt::lynx

#steam
package::apt::steam

#cmatrix
package::apt::cmatrix

#fish(Friendly Interactive Shell)
package::apt::fish

#fish como shell padrão
package::fish-padrao
install::chsh -s /usr/bin/fish $(users|awk ' {print $1} ')

#psensor
package::apt::psensor

#ultimate-vimrc(Awesome version)
package::ultimate-vimrc
dependency::vim::git
install::git clone --depth=1 https://github.com/amix/vimrc.git ~/.vim_runtime;
install::sh ~/.vim_runtime/install_awesome_vimrc.sh;
install::chown -R $(users|awk ' {print $1} ') $(ls -d $HOME/.* | grep 'vim');

#trash-cli(lixeira no terminal)
package::apt::trash-cli

#golang(Linguagem GO) 1.12
package::golang
install::wget https://dl.google.com/go/go1.12.linux-amd64.tar.gz
install::tar -C /usr/local/ -xzf go1.12.linux-amd64.tar.gz
install::mkdir $HOME/go $HOME/go/bin $HOME/go/pkg $HOME/go/src
install::chown -R $(users|awk ' {print $1} ') $HOME/go
install::echo 'export PATH=$PATH:/usr/local/go/bin' >> $HOME/.profile
install::echo 'export GOPATH=$HOME/go' >> $HOME/.profile
install::echo 'export PATH=$PATH:$GOPATH/bin' >> $HOME/.profile
install::rm -v go1.12.linux-amd64.tar.gz
install::echo 'Disponibilizado variável $GOPATH, diretório ~/go e finalizado instalação.'
install::echo -e "Para usuários do ZSH, execute o comando abaixo para reconhecer o executável go:\ncp -v ~/.profile ~/.zprofile"

#gsmartcontrol(verificar estado de hd)
package::apt::gsmartcontrol

#qbittorrent(Cliente Torrent)
package::apt::qbittorrent

#ClamAV(Antivírus Open-Source)
package::apt::clamav
install::apt install clamtk

#HardInfo(Informações do Sistema e Benchmark)
package::apt::hardinfo

#NMON(Monitor de recursos no terminal)
package::apt::nmon

#HWinfo(Informações do hardware)
package::apt::hwinfo

#NETDATA(Informações do Sistema WEB)
package::netdata
install::curl -Ss https://my-netdata.io/kickstart.sh -o kickstart.sh && bash kickstart.sh
install::rm -v kickstart.sh
install::echo "Execute: 'netdata' no terminal para verificar o endereço:porta da aplicação"

#Android-Studio(IDE Java para Android - SNAP)
package::android-studio
dependency::snapd::openjdk-11-jdk
install::snap install android-studio --classic;
remove::snap remove android-studio;

